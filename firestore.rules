rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Règles pour les utilisateurs - seul le propriétaire peut modifier son profil
    match /users/{userId} {
      allow read: if true; // Tout le monde peut voir les profils publics
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Règles pour les posts - seul l'auteur peut modifier/supprimer
    match /posts/{postId} {
      allow read: if true; // Tout le monde peut voir les posts
      allow create: if request.auth != null && request.auth.uid == resource.data.authorId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    // Règles pour les trips - seul l'auteur peut modifier/supprimer
    match /trips/{tripId} {
      allow read: if true; // Tout le monde peut voir les trips
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Sous-collections des trips
      match /cities/{cityId} {
        allow read: if true;
        allow write: if request.auth != null;
      }
      match /posts/{postId} {
        allow read: if true;
        allow write: if request.auth != null;
      }
    }
    
    // Règles pour les notifications - seul le destinataire peut les voir
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Règles pour les follows - seul l'utilisateur connecté peut gérer ses follows
    match /follows/{followId} {
      allow read: if true;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.followerId || request.auth.uid == resource.data.followingId);
    }
    
    // Interdire tout le reste
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
